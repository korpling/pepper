<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.corpus-tools</groupId>
	<artifactId>pepper</artifactId>
	<version>3.6.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>pepper-framework</module>
		<module>pepper-parentModule</module>
		<module>pepper-newModule</module>
		<module>pepper-lib</module>
		<module>pepper-doc</module>
	</modules>
	<developers>
		<developer>
			<name>Florian Zipser</name>
			<email>saltnpepper@lists.hu-berlin.de</email>
			<organization>Humboldt-Universit채t zu Berlin</organization>
			<organizationUrl>https://www.linguistik.hu-berlin.de/en/institut-en/professuren-en/korpuslinguistik/standardseite-en?set_language=en</organizationUrl>
		</developer>
		<developer>
			<name>Martin Klotz</name>
			<email>saltnpepper@lists.hu-berlin.de</email>
			<organization>Humboldt-Universit채t zu Berlin</organization>
			<organizationUrl>https://www.linguistik.hu-berlin.de/en/institut-en/professuren-en/korpuslinguistik/standardseite-en?set_language=en</organizationUrl>
		</developer>
		<developer>
			<name>Thomas Krause</name>
			<email>saltnpepper@lists.hu-berlin.de</email>
			<organization>Humboldt-Universit채t zu Berlin</organization>
			<organizationUrl>https://www.linguistik.hu-berlin.de/en/institut-en/professuren-en/korpuslinguistik/standardseite-en?set_language=en</organizationUrl>
		</developer>
		<developer>
			<name>Stephan Druskat</name>
			<email>saltnpepper@lists.hu-berlin.de</email>
			<organization>Humboldt-Universit채t zu Berlin</organization>
			<organizationUrl>https://www.linguistik.hu-berlin.de/en/institut-en/professuren-en/korpuslinguistik/standardseite-en?set_language=en</organizationUrl>
		</developer>
	</developers>
	<description>A highly extensible plattform for conversion and manipulation of linguistic data between an unbound set of formats. Pepper can be used stand-alone as a command line interface, or be integrated as an API into other software products.</description>
	<url>http://corpus-tools.org/pepper/</url>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/korpling/pepper/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://korpling.german.hu-berlin.de/jenkins/</url>
	</ciManagement>
	<inceptionYear>2009</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git://github.com/korpling/pepper.git</connection>
		<developerConnection>scm:git:git@github.com:korpling/pepper.git</developerConnection>
		<url>https://github.com/korpling/pepper</url>
		<tag>HEAD</tag>
	</scm>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>oss-snapshot</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<properties>
		<pepper.mail>saltnpepper@lists.hu-berlin.de</pepper.mail>
		<pepper.hp>http://corpus-tools.org/pepper/</pepper.hp>
		<pepper.shortDesc>A highly extensible plattform for conversion and
			manipulation of linguistic data.</pepper.shortDesc>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<bundle.file>${project.artifactId}-${project.version}.jar</bundle.file>
		<assemblies.name>src/assemble/assemblies.xml</assemblies.name>
		<license.file>${basedir}/LICENSE</license.file>
		<notice.file>${basedir}/NOTICE</notice.file>
		<OSGI-INF>OSGI-INF</OSGI-INF>
		<META-INF>${basedir}/META-INF</META-INF>
		<serviceComponents>${OSGI-INF}/service-component</serviceComponents>
		<allServiceComponents>${serviceComponents}/*.xml</allServiceComponents>
		<serviceComponentsTarget>${basedir}/target/classes/OSGI-INF/service-component</serviceComponentsTarget>

		<!-- versions of dependencies -->
		<salt.version>3.4.2</salt.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<slf4j.version>1.7.5</slf4j.version>
		<junit.version>4.13.1</junit.version>
		<assertj.version>2.4.1</assertj.version>
		<mockito.version>1.10.19</mockito.version>
		<org.osgi.core.version>4.3.1</org.osgi.core.version>
		<org.osgi.compendium.version>4.3.1</org.osgi.compendium.version>
		<org.eclipse.osgi.version>3.13.0</org.eclipse.osgi.version>
		<carrot-osgi-anno-scr-core.version>2.0.2</carrot-osgi-anno-scr-core.version>
		<carrot-osgi-anno-scr-make.version>2.0.2</carrot-osgi-anno-scr-make.version>
		<org.codehaus.janino.version>2.7.8</org.codehaus.janino.version>
		<org.eclipse.aether.version>1.0.2.v20150114</org.eclipse.aether.version>
		<org.eclipse.osgi.services.version>3.4.0.v20140312-2051</org.eclipse.osgi.services.version>
		<commons.io.version>2.4</commons.io.version>
		<!-- versions of plugins -->
		<maven-bundle-plugin.version>2.5.4</maven-bundle-plugin.version>
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>
		<maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-license-plugin.version>1.4.0</maven-license-plugin.version>
		<maven-jar-plugin.version>2.3.1</maven-jar-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<carrot-maven-scr-plugin.version>3.0.3</carrot-maven-scr-plugin.version>
		<maven-notice-plugin.version>1.0.4</maven-notice-plugin.version>
		<docbkx-maven-plugin.version>2.0.16</docbkx-maven-plugin.version>
		<docbkx-fop-support.version>2.0.16</docbkx-fop-support.version>
		<xmlunit.version>1.5</xmlunit.version>
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<findbugs-maven-plugin.version>3.0.2</findbugs-maven-plugin.version>
		<maven-site-plugin.version>3.4</maven-site-plugin.version>
		<maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
		<maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
		<maven-javadoc-plugin.version>2.10.1</maven-javadoc-plugin.version>
	</properties>
	<dependencies>
		<!-- <dependency> <groupId>org.codehaus.janino</groupId> <artifactId>janino</artifactId> 
			<version>${org.codehaus.janino.version}</version> <optional>true</optional> 
			</dependency> -->
		<dependency>
			<groupId>org.corpus-tools</groupId>
			<artifactId>salt-api</artifactId>
			<version>${salt.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<!-- used in test framework for modules -->
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<!-- used in test framework for modules -->
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<version>${xmlunit.version}</version>
			<!-- used in selftest for modules -->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- OSGI service-component -->
		<!-- OSGI Annotations. Use standard first, override with custom. -->
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>${org.osgi.core.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>${org.osgi.compendium.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<!-- start Java EE replacements -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api-osgi</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-osgi</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>com.sun.activation</groupId>
			<artifactId>javax.activation</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- end Java EE replacements -->
		<!-- start: OSGi declaractive services -->
		<dependency>
			<groupId>org.eclipse.birt.runtime</groupId>
			<artifactId>org.eclipse.osgi.services</artifactId>
			<version>${org.eclipse.osgi.services.version}</version>
		</dependency>
		<dependency>
			<groupId>com.carrotgarden.osgi</groupId>
			<artifactId>carrot-osgi-anno-scr-core</artifactId>
			<version>${carrot-osgi-anno-scr-core.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.carrotgarden.osgi</groupId>
			<artifactId>carrot-osgi-anno-scr-make</artifactId>
			<version>${carrot-osgi-anno-scr-make.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- end: OSGi declaractive services -->
	</dependencies>
	<organization>
		<name>Humboldt-Universit채t zu Berlin, INRIA</name>
	</organization>
	<build>
		<plugins>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.15.1</version>
				<configuration>
					<pushRemote>true</pushRemote>
					<preReleaseGoals>license:format notice:generate</preReleaseGoals>
					<postReleaseGoals>-Prelease,doxygen package assembly:single deploy</postReleaseGoals>
					<postHotfixGoals>-Prelease,doxygen package assembly:single deploy</postHotfixGoals>
					<verbose>true</verbose>
					<gitFlowConfig>
						<productionBranch>master</productionBranch>
						<developmentBranch>develop</developmentBranch>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<supportBranchPrefix>support/</supportBranchPrefix>
						<versionTagPrefix>v</versionTagPrefix>
						<origin>origin</origin>
					</gitFlowConfig>
				</configuration>
			</plugin>
			<plugin>
				<!-- a plugin to clean the project when calling mvn clean -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
				<configuration>
					<!-- removes META-INF and OSGI-INF -->
					<filesets>
						<fileset>
							<directory>META-INF</directory>
							<directory>OSGI-INF</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
				<executions>
					<execution>
						<!-- This is necessary, because of a problem in the carrot-maven-scr-plugin. 
							The plugin produces empty files (null.xml) in the service-components folder, 
							this file is removed by the current clean-plugin and its configuration. -->
						<id>cleanup-null.xml</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>OSGI-INF/service-component</directory>
									<includes>
										<include>null.xml</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
								<fileset>
									<directory>target/classes/OSGI-INF/service-component</directory>
									<includes>
										<include>null.xml</include>
									</includes>
									<followSymlinks>false</followSymlinks>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generate a jar for sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- start: plugin to deploy project to maven repo -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>false</autoReleaseAfterClose>
					<stagingProgressTimeoutMinutes>120</stagingProgressTimeoutMinutes>
				</configuration>
			</plugin>
			<!-- creation of OSGi Service components -->
			<plugin>
				<groupId>com.carrotgarden.maven</groupId>
				<artifactId>carrot-maven-scr-plugin</artifactId>
				<version>${carrot-maven-scr-plugin.version}</version>
				<dependencies>
					<!-- manually update to latest ASM version in order to compile under 
						Java > 8 -->
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>7.0</version>
					</dependency>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm-tree</artifactId>
						<version>7.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Unwanted interfaces. -->
					<excludedServices>
						<service>java.lang.Runnable</service>
					</excludedServices>
					<!-- Eclipse maven console settings. -->
					<eclipseSettings>
						<logBuildTimes>true</logBuildTimes>
						<logErrorTraces>true</logErrorTraces>
						<logExcludedServices>true</logExcludedServices>
						<logInvocationDetails>true</logInvocationDetails>
						<logComponentDescriptors>true</logComponentDescriptors>
					</eclipseSettings>
				</configuration>
				<executions>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<phase>process-classes</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- end: creation of OSGi Service components -->
			<!-- start: assembly plugin -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>${assemblies.name}</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<outputDirectory>target/distribution</outputDirectory>
					<workDirectory>target/assembly/work</workDirectory>
				</configuration>
			</plugin>
			<!-- end: assembly plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- start: for generating license headers in source files. Run mvn license:format -->
			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>${maven-license-plugin.version}</version>
				<configuration>
					<header>${basedir}/src/etc/header.txt</header>
					<includes>
						<include>src/main/java/**</include>
						<include>src/test/java/**</include>
					</includes>
				</configuration>
			</plugin>
			<!-- end: for generating license headers in source files. Run mvn license:format -->
			<!-- start: creates a NOTICE file use mvn notice:generate -->
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<version>${maven-notice-plugin.version}</version>
				<configuration>
					<noticeTemplate>./src/etc/NOTICE_template.txt</noticeTemplate>
					<licenseMapping>
						<!-- <param>https://source.jasig.org/licenses/license-mappings.xml</param> -->
						<param>https://korpling.german.hu-berlin.de/saltnpepper/misc/license-mappings.xml</param>
					</licenseMapping>
				</configuration>
			</plugin>
			<!-- end: creates a NOTICE file use mvn notice:generate -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.reficio</groupId>
				<artifactId>p2-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<configuration>
							<artifacts>
								<artifact>
									<id>org.corpus-tools:pepper-lib:${project.version}</id>
									<source>true</source>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.27.v20190418</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppSourceDirectory>${basedir}/target/repository/</webAppSourceDirectory>
					<webApp>
						<contextPath>/site</contextPath>
					</webApp>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}-${project.version}</finalName>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- generate a jar for sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven-source-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Generates a Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
					<!-- The Maven GPG plugin is used to sign the components -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>license</report>
						</reports>
					</reportSet>
				</reportSets>

			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>
				<configuration>
					<excludeFilterFile>${basedir}/src/findbugs/excludeFilter.xml</excludeFilterFile>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<name>${project.groupId}.${project.artifactId}</name>
</project>
